{"version":3,"file":"static/js/993.0f6f6197.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/Loader/Spinner.jsx","components/Form/Form.jsx","components/ContactsList/ContactsList.styled.jsx","components/redux/selectors.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App.styled.jsx","components/Notif/Nitif.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 40px;\n  margin-top: 10px;\n  display: block;\n  text-decoration: none;\n  border: 2px solid #e8f0f7;\n  border-radius: 3px;\n  text-align: center;\n\n  overflow: hidden;\n  font-size: 15px;\n  line-height: 20px;\n  color: #fff;\n  font-weight: bold;\n  text-transform: uppercase;\n  font-family: 'Roboto Condensed', Тahoma, sans-serif;\n  background: #e7473c;\n  transition: box-shadow 0.3s, transform 0.3s;\n  cursor: pointer;\n  z-index: 1;\n\n  :hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const FormContent = styled.form`\n  width: 505px;\n  margin-left: 15px;\n  margin-right: auto;\n`;\n\nexport const Input = styled.input`\n  font-size: 20px;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n`;\n","import styled from '@emotion/styled/macro';\nimport { keyframes } from '@emotion/react';\nimport { CgSpinner } from 'react-icons/cg';\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(1turn);\n}\n`;\n\nexport const Spinner = styled(CgSpinner)`\n  animation: ${spin} 0.85s linear infinite;\n`;\n\nSpinner.defaultProps = {\n  size: 35,\n};\n","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'components/redux/operations';\nimport { Button, FormContent, Input, Label } from './Form.styled';\nimport toast from 'react-hot-toast';\nimport { Spinner } from 'components/Loader/Spinner';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n\n  const listContainsContact = contact => {\n    return contacts.some(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n  };\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const submit = data => {\n    if (listContainsContact(data)) {\n      return toast.error(`${data.name} is already in contacts.`);\n    }\n    dispatch(addContact(data));\n    reset();\n  };\n\n  return (\n    <FormContent onSubmit={handleSubmit(submit)}>\n      <Label>\n        Name{' '}\n        <Input\n          {...register('name', { required: true })}\n          placeholder=\"Eddie van Halen\"\n        />\n      </Label>\n      <Label>\n        Number{' '}\n        <Input\n          {...register('number', {\n            required: true,\n            minLength: {\n              value: 9,\n              message: 'Number must have 9 length',\n            },\n          })}\n          placeholder=\"+38 (067) 1234567\"\n        />\n      </Label>\n\n      <p>{errors.number?.message}</p>\n      {(isLoading && <Button type=\"submit\">{<Spinner />}</Button>) || (\n        <Button type=\"submit\">Save</Button>\n      )}\n    </FormContent>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  max-width: 1100px;\n  margin-bottom: 30px;\n`;\n\nexport const Item = styled.li`\n  padding: 0;\n  margin: 0;\n  width: 300px;\n  margin-left: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 3px solid #e7473c;\n  background-color: white;\n  border-radius: 5px;\n  margin-top: 15px;\n  padding: 5px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  display: block;\n  text-decoration: none;\n  border: 2px solid #e8f0f7;\n  border-radius: 3px;\n  text-align: center;\n\n  overflow: hidden;\n  font-size: 18px;\n  color: #fff;\n  font-weight: bold;\n  text-transform: uppercase;\n  font-family: 'Roboto Condensed', Тahoma, sans-serif;\n  background: #e7473c;\n  transition: box-shadow 0.3s, transform 0.3s;\n  cursor: pointer;\n\n  :hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const Notiffication = styled.p`\n  font-size: 25px;\n  color: #fff;\n  padding-top: 10px;\n  padding-bottom: 15px;\n  text-align: center;\n`;\n\nexport const NotifficationContainer = styled.div`\n  border: 3px solid white;\n  margin-right: auto;\n  margin-left: 15px;\n  margin-top: 30px;\n  max-width: 505px;\n  background-color: #e7473c;\n  border-radius: 8px;\n`;\n\nexport const Numb = styled.a`\n  color: #000000;\n  padding: 0;\n  font-size: 18px;\n  text-decoration: underline;\n  transition: color 250ms linear;\n\n  &:hover {\n    color: #e61405;\n  }\n`;\n","export const getContacts = state => state.contacts.items;\n\nexport const contactsIsEmpty = state => getContacts(state).length === 0;\n","import {\n  List,\n  Item,\n  Button,\n  Notiffication,\n  NotifficationContainer,\n  Numb,\n} from './ContactsList.styled';\nimport { useSelector } from 'react-redux';\nimport { deleteContact } from 'components/redux/operations';\nimport { useDispatch } from 'react-redux';\nimport { contactsIsEmpty } from 'components/redux/selectors';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const onDeleteClick = e => {\n    const idToDelete = e.currentTarget.id;\n    dispatch(deleteContact(idToDelete));\n  };\n  const contacts = useSelector(state => state.contacts.items);\n  // const isLoading = useSelector(state => state.contacts.isLoading);\n  const contactsFilter = useSelector(state => state.filter);\n  const filteredContacts = contacts.filter(contacts =>\n    contacts.name.toLowerCase().includes(contactsFilter)\n  );\n\n  const contactsListEmpty = useSelector(contactsIsEmpty);\n\n  if (!contactsListEmpty && filteredContacts.length === 0) {\n    return (\n      <NotifficationContainer>\n        <Notiffication>No contact with such name found</Notiffication>\n      </NotifficationContainer>\n    );\n  }\n\n  return (\n    <List>\n      {filteredContacts.map(({ name, number, id }) => (\n        <Item key={id}>\n          <div>\n            {' '}\n            <p style={{ fontSize: '18px' }}>{name}</p>\n            <p>\n              <Numb href=\"tel:\">{number}</Numb>\n            </p>\n          </div>\n          <Button onClick={onDeleteClick} type=\"button\" id={id} name={name}>\n            x\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Filterlabel = styled.div`\n  position: relative;\n  margin-top: 10px;\n  width: 505px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Input = styled.input`\n  font-size: 20px;\n`;\n","import { useDispatch } from 'react-redux';\n// import { setF } from 'components/redux/actions';\nimport { setFilter } from 'components/redux/filterSlice';\nimport { Filterlabel, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const onInputChange = e => {\n    dispatch(setFilter(e.currentTarget.value.toLowerCase()));\n  };\n\n  return (\n    <Filterlabel>\n      <Input type=\"text\" placeholder=\"Search\" onChange={onInputChange} />\n    </Filterlabel>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MainContent = styled.div`\n  /* margin-top: 30px;\n  border-radius: 10px;\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 15px;\n  background-color: #7baab3; */\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 35px;\n`;\n","import styled from '@emotion/styled';\n\nconst Descr = styled.p`\n  text-align: center;\n  font-size: 25px;\n  color: #fff;\n  padding-top: 10px;\n  padding-bottom: 15px;\n`;\n\nconst Container = styled.div`\n  border: 3px solid white;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 530px;\n  background-color: #e7473c;\n  border-radius: 10px;\n`;\n\nexport const Notif = () => {\n  return (\n    <Container>\n      <Descr>Contacts list is empty. Add your first contacts :)</Descr>\n    </Container>\n  );\n};\n","import { Form } from '../components/Form/Form';\nimport { ContactsList } from '../components/ContactsList/ContactsList';\nimport { Filter } from '../components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../components/redux/operations';\nimport { MainContent, Title } from '../components/App.styled';\nimport { Notif } from 'components/Notif/Nitif';\n// import { Loader } from '../components/Loader/Loader';\nimport { useEffect } from 'react';\n\nexport default function Contacts() {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <MainContent>\n      <Title>Phonebook</Title>\n      {contacts.length === 0 && <Notif />}\n      {contacts.length > 0 && <Filter />}\n      <Form />\n      <ContactsList />\n    </MainContent>\n  );\n}\n"],"names":["Button","styled","FormContent","Input","Label","spin","keyframes","Spinner","CgSpinner","defaultProps","size","Form","dispatch","useDispatch","contacts","useSelector","state","items","isLoading","useForm","register","handleSubmit","reset","errors","formState","onSubmit","data","contact","some","name","toLowerCase","toast","addContact","required","placeholder","minLength","value","message","number","type","List","Item","Notiffication","NotifficationContainer","Numb","contactsIsEmpty","getContacts","length","ContactsList","onDeleteClick","e","idToDelete","currentTarget","id","deleteContact","contactsFilter","filter","filteredContacts","includes","map","style","fontSize","href","onClick","Filterlabel","Filter","onChange","setFilter","MainContent","Title","Descr","Container","Notif","Contacts","useEffect","fetchContacts"],"sourceRoot":""}