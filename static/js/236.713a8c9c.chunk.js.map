{"version":3,"file":"static/js/236.713a8c9c.chunk.js","mappings":"ySAEaA,EAASC,EAAAA,EAAAA,OAAH,wlBA2BNC,EAAcD,EAAAA,EAAAA,KAAH,uKAWXE,EAAQF,EAAAA,EAAAA,MAAH,4CAILG,EAAQH,EAAAA,EAAAA,MAAH,4CAILI,EAAaJ,EAAAA,EAAAA,EAAH,kE,oGC5CjBK,GAAOC,EAAAA,EAAAA,IAAH,qGASGC,GAAU,OAAOC,EAAAA,IAAP,sBAAH,aACLH,EADK,2BAIpBE,EAAQE,aAAe,CACrBC,KAAM,G,sEChBKC,E,QAAuBX,EAAAA,IAAH,8I,8LCc3BY,EAASC,EAAAA,GACL,CACNC,KAAMD,EAAAA,KAAaE,SAAS,wBAC5BC,MAAOH,EAAAA,KAEJG,MAAM,+BACND,SAAS,qBACZE,SAAUJ,EAAAA,KAEPK,QACC,sDACA,oGAEDH,SAAS,0BAEbA,WAEUI,EAAe,WAAO,IAAD,MAC1BC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAEhC,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYf,KAJtBgB,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAgBf,OACE,SAAC,IAAD,WACE,UAAC,KAAD,CAAaE,SAAUH,GAbZ,SAAAI,GACbC,QAAQC,IAAIF,GACZb,GACEgB,EAAAA,EAAAA,IAAa,CACXtB,KAAMmB,EAAKnB,KACXE,MAAOiB,EAAKjB,MACZC,SAAUgB,EAAKhB,WAGpB,IAIG,WACE,UAAC,KAAD,wBACW,SAAC,MAAD,kBAAWW,EAAS,SAApB,IAA6BS,YAAY,kBAClD,SAAC,KAAD,oBAAaP,EAAOhB,YAApB,aAAa,EAAawB,cAE5B,UAAC,KAAD,qBACQ,SAAC,MAAD,kBAAWV,EAAS,UAApB,IAA8BS,YAAY,uBAChD,SAAC,KAAD,oBAAaP,EAAOd,aAApB,aAAa,EAAcsB,cAE7B,UAAC,KAAD,sBACW,KACT,SAAC,MAAD,gBACEC,KAAK,YACDX,EAAS,aAFf,IAGES,YAAY,eAEd,SAAC,KAAD,oBAAaP,EAAOb,gBAApB,aAAa,EAAiBqB,aAE9BhB,IAAe,SAAC,KAAD,CAAQiB,KAAK,SAAb,UAAuB,SAAChC,EAAA,EAAD,QACtC,SAAC,KAAD,CAAQgC,KAAK,SAAb,0BAKT,EC/Ec,SAASC,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACtB,EAAD,MAGL,C","sources":["components/Form/Form.styled.jsx","components/Loader/Spinner.jsx","components/LoginForm/LoginForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 40px;\n  margin-top: 10px;\n  display: block;\n  text-decoration: none;\n  border: 2px solid #e8f0f7;\n  border-radius: 3px;\n  text-align: center;\n\n  overflow: hidden;\n  font-size: 15px;\n  line-height: 20px;\n  color: #fff;\n  font-weight: bold;\n  text-transform: uppercase;\n  font-family: 'Roboto Condensed', Ð¢ahoma, sans-serif;\n  background: #e7473c;\n  transition: box-shadow 0.3s, transform 0.3s;\n  cursor: pointer;\n  z-index: 1;\n\n  :hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const FormContent = styled.form`\n  width: 260px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (min-width: 600px) {\n    width: 505px;\n    margin-left: 15px;\n  }\n`;\n\nexport const Input = styled.input`\n  font-size: 20px;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n`;\n\nexport const Validation = styled.p`\n  font-size: 14px;\n  margin-bottom: 8px;\n`;\n","import styled from '@emotion/styled/macro';\nimport { keyframes } from '@emotion/react';\nimport { CgSpinner } from 'react-icons/cg';\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(1turn);\n}\n`;\n\nexport const Spinner = styled(CgSpinner)`\n  animation: ${spin} 0.85s linear infinite;\n`;\n\nSpinner.defaultProps = {\n  size: 35,\n};\n","import styled from '@emotion/styled';\n\nexport const LoginStyledContainer = styled.div`\n  width: 260px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (min-width: 600px) {\n    width: 505px;\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  FormContent,\n  Input,\n  Label,\n  Validation,\n} from '../Form/Form.styled';\nimport { registration } from '../redux/Auth/operations';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { selectIsLoadingUser } from 'components/redux/Auth/selectors';\nimport { Spinner } from 'components/Loader/Spinner';\nimport { LoginStyledContainer } from 'components/LoginForm/LoginForm.styled';\n\nconst schema = yup\n  .object({\n    name: yup.string().required('Username is required'),\n    email: yup\n      .string()\n      .email('Plaese, enter a valid email')\n      .required('Email is required'),\n    password: yup\n      .string()\n      .matches(\n        /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/,\n        'Password must contain at least 1 uppercase letter, 1 lowercase letter, 1 number and 8 characters'\n      )\n      .required('Password is required'),\n  })\n  .required();\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const userLoading = useSelector(selectIsLoadingUser);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const submit = data => {\n    console.log(data);\n    dispatch(\n      registration({\n        name: data.name,\n        email: data.email,\n        password: data.password,\n      })\n    );\n  };\n\n  return (\n    <LoginStyledContainer>\n      <FormContent onSubmit={handleSubmit(submit)}>\n        <Label>\n          Username <Input {...register('name')} placeholder=\"Ace Ventura\" />\n          <Validation>{errors.name?.message}</Validation>\n        </Label>\n        <Label>\n          Email <Input {...register('email')} placeholder=\"qwerty@gmail.com\" />\n          <Validation>{errors.email?.message}</Validation>\n        </Label>\n        <Label>\n          Password{' '}\n          <Input\n            type=\"password\"\n            {...register('password')}\n            placeholder=\"Friday13\"\n          />\n          <Validation>{errors.password?.message}</Validation>\n        </Label>\n        {(userLoading && <Button type=\"submit\">{<Spinner />}</Button>) || (\n          <Button type=\"submit\">Register</Button>\n        )}\n      </FormContent>\n    </LoginStyledContainer>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["Button","styled","FormContent","Input","Label","Validation","spin","keyframes","Spinner","CgSpinner","defaultProps","size","LoginStyledContainer","schema","yup","name","required","email","password","matches","RegisterForm","dispatch","useDispatch","userLoading","useSelector","selectIsLoadingUser","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","data","console","log","registration","placeholder","message","type","Register","Helmet"],"sourceRoot":""}