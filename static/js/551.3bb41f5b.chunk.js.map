{"version":3,"file":"static/js/551.3bb41f5b.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/Loader/Spinner.jsx","components/Form/Form.jsx","components/ContactsList/ContactsList.styled.jsx","components/redux/selectors.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App.styled.jsx","components/Notif/Nitif.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 40px;\n  margin-top: 10px;\n  display: block;\n  text-decoration: none;\n  border: 2px solid #e8f0f7;\n  border-radius: 3px;\n  text-align: center;\n\n  overflow: hidden;\n  font-size: 15px;\n  line-height: 20px;\n  color: #fff;\n  font-weight: bold;\n  text-transform: uppercase;\n  font-family: 'Roboto Condensed', Тahoma, sans-serif;\n  background: #e7473c;\n  transition: box-shadow 0.3s, transform 0.3s;\n  cursor: pointer;\n  z-index: 1;\n\n  :hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const FormContent = styled.form`\n  width: 505px;\n  margin-left: 15px;\n  margin-right: auto;\n`;\n\nexport const Input = styled.input`\n  font-size: 20px;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n`;\n\nexport const Validation = styled.p`\n  font-size: 14px;\n  margin-bottom: 8px;\n`;\n","import styled from '@emotion/styled/macro';\nimport { keyframes } from '@emotion/react';\nimport { CgSpinner } from 'react-icons/cg';\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(1turn);\n}\n`;\n\nexport const Spinner = styled(CgSpinner)`\n  animation: ${spin} 0.85s linear infinite;\n`;\n\nSpinner.defaultProps = {\n  size: 35,\n};\n","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'components/redux/operations';\nimport { Button, FormContent, Input, Label, Validation } from './Form.styled';\nimport toast from 'react-hot-toast';\nimport { Spinner } from 'components/Loader/Spinner';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nconst schema = yup\n  .object({\n    name: yup.string().required('Name is required'),\n    number: yup.string().required('Number is required'),\n  })\n  .required();\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n\n  const listContainsContact = contact => {\n    return contacts.some(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n  };\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const submit = data => {\n    if (listContainsContact(data)) {\n      return toast.error(`${data.name} is already in contacts.`);\n    }\n    dispatch(addContact(data));\n    reset();\n  };\n\n  return (\n    <FormContent onSubmit={handleSubmit(submit)}>\n      <Label>\n        Name <Input {...register('name')} placeholder=\"Eddie van Halen\" />\n        <Validation>{errors.name?.message}</Validation>\n      </Label>\n      <Label>\n        Number <Input {...register('number')} placeholder=\"+38 (067) 1234567\" />\n        <Validation>{errors.number?.message}</Validation>\n      </Label>\n\n      {(isLoading && <Button type=\"submit\">{<Spinner />}</Button>) || (\n        <Button type=\"submit\">Save</Button>\n      )}\n    </FormContent>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  max-width: 1100px;\n  margin-bottom: 30px;\n`;\n\nexport const Item = styled.li`\n  padding: 0;\n  margin: 0;\n  width: 300px;\n  margin-left: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 3px solid #e7473c;\n  background-color: white;\n  border-radius: 5px;\n  margin-top: 15px;\n  padding: 5px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  display: block;\n  text-decoration: none;\n  border: 2px solid #e8f0f7;\n  border-radius: 3px;\n  text-align: center;\n\n  overflow: hidden;\n  font-size: 18px;\n  color: #fff;\n  font-weight: bold;\n  text-transform: uppercase;\n  font-family: 'Roboto Condensed', Тahoma, sans-serif;\n  background: #e7473c;\n  transition: box-shadow 0.3s, transform 0.3s;\n  cursor: pointer;\n\n  :hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const Notiffication = styled.p`\n  font-size: 25px;\n  color: #fff;\n  padding-top: 10px;\n  padding-bottom: 15px;\n  text-align: center;\n`;\n\nexport const NotifficationContainer = styled.div`\n  border: 3px solid white;\n  margin-right: auto;\n  margin-left: 15px;\n  margin-top: 30px;\n  max-width: 505px;\n  background-color: #e7473c;\n  border-radius: 8px;\n`;\n\nexport const Numb = styled.a`\n  color: #000000;\n  padding: 0;\n  font-size: 18px;\n  text-decoration: underline;\n  transition: color 250ms linear;\n\n  &:hover {\n    color: #e61405;\n  }\n`;\n","export const getContacts = state => state.contacts.items;\n\nexport const contactsIsEmpty = state => getContacts(state).length === 0;\n","import {\n  List,\n  Item,\n  Button,\n  Notiffication,\n  NotifficationContainer,\n  Numb,\n} from './ContactsList.styled';\nimport { useSelector } from 'react-redux';\nimport { deleteContact } from 'components/redux/operations';\nimport { useDispatch } from 'react-redux';\nimport { contactsIsEmpty } from 'components/redux/selectors';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const onDeleteClick = e => {\n    const idToDelete = e.currentTarget.id;\n    dispatch(deleteContact(idToDelete));\n  };\n  const contacts = useSelector(state => state.contacts.items);\n  // const isLoading = useSelector(state => state.contacts.isLoading);\n  const contactsFilter = useSelector(state => state.filter);\n  const filteredContacts = contacts.filter(contacts =>\n    contacts.name.toLowerCase().includes(contactsFilter)\n  );\n\n  const contactsListEmpty = useSelector(contactsIsEmpty);\n\n  if (!contactsListEmpty && filteredContacts.length === 0) {\n    return (\n      <NotifficationContainer>\n        <Notiffication>No contact with such name found</Notiffication>\n      </NotifficationContainer>\n    );\n  }\n\n  return (\n    <List>\n      {filteredContacts.map(({ name, number, id }) => (\n        <Item key={id}>\n          <div>\n            {' '}\n            <p style={{ fontSize: '18px' }}>{name}</p>\n            <p>\n              <Numb href=\"tel:\">{number}</Numb>\n            </p>\n          </div>\n          <Button onClick={onDeleteClick} type=\"button\" id={id} name={name}>\n            x\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Filterlabel = styled.div`\n  position: relative;\n  margin-top: 10px;\n  width: 505px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Input = styled.input`\n  font-size: 20px;\n`;\n","import { useDispatch } from 'react-redux';\n// import { setF } from 'components/redux/actions';\nimport { setFilter } from 'components/redux/filterSlice';\nimport { Filterlabel, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const onInputChange = e => {\n    dispatch(setFilter(e.currentTarget.value.toLowerCase()));\n  };\n\n  return (\n    <Filterlabel>\n      <Input type=\"text\" placeholder=\"Search\" onChange={onInputChange} />\n    </Filterlabel>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MainContent = styled.div`\n  /* margin-top: 30px;\n  border-radius: 10px;\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 15px;\n  background-color: #7baab3; */\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 35px;\n`;\n","import styled from '@emotion/styled';\n\nconst Descr = styled.p`\n  text-align: center;\n  font-size: 25px;\n  color: #fff;\n  padding-top: 10px;\n  padding-bottom: 15px;\n`;\n\nconst Container = styled.div`\n  border: 3px solid white;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 530px;\n  background-color: #e7473c;\n  border-radius: 10px;\n`;\n\nexport const Notif = () => {\n  return (\n    <Container>\n      <Descr>Contacts list is empty. Add your first contacts :)</Descr>\n    </Container>\n  );\n};\n","import { Form } from '../components/Form/Form';\nimport { ContactsList } from '../components/ContactsList/ContactsList';\nimport { Filter } from '../components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../components/redux/operations';\nimport { MainContent, Title } from '../components/App.styled';\nimport { Notif } from 'components/Notif/Nitif';\n// import { Loader } from '../components/Loader/Loader';\nimport { useEffect } from 'react';\n\nexport default function Contacts() {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <MainContent>\n      <Title>Phonebook</Title>\n      {contacts.length === 0 && <Notif />}\n      {contacts.length > 0 && <Filter />}\n      <Form />\n      <ContactsList />\n    </MainContent>\n  );\n}\n"],"names":["Button","styled","FormContent","Input","Label","Validation","spin","keyframes","Spinner","CgSpinner","defaultProps","size","schema","yup","name","required","number","Form","dispatch","useDispatch","contacts","useSelector","state","items","isLoading","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","onSubmit","data","contact","some","toLowerCase","toast","addContact","placeholder","message","type","List","Item","Notiffication","NotifficationContainer","Numb","contactsIsEmpty","getContacts","length","ContactsList","onDeleteClick","e","idToDelete","currentTarget","id","deleteContact","contactsFilter","filter","filteredContacts","includes","map","style","fontSize","href","onClick","Filterlabel","Filter","onChange","setFilter","value","MainContent","Title","Descr","Container","Notif","Contacts","useEffect","fetchContacts"],"sourceRoot":""}